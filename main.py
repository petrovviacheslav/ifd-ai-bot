import os
import re
import random

from telegram import Update, InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
    ContextTypes,
    CallbackContext
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv('TOKEN')
KANDINSKY_BOT_USERNAME = "kandinsky21_bot"
ARR_BAN_WORD = [
    ['–∫–æ–Ω—å', '–∫–æ–Ω–∏', '–∫–æ–Ω—è', '–∫–æ–Ω–µ–π', '–±–æ–≥–∞—Ç—ã—Ä—å', '–±–æ–≥–∞—Ç—ã—Ä–∏', '–±–æ–≥–∞—Ç—ã—Ä–µ–π', '–∫–æ–ª—å—á—É–≥–∞', '–∫–æ–ª—å—á—É–≥–∏', '–∫–æ–ª—å—á—É–≥', '–ø–æ–ª–µ',
     '–ø–æ–ª—è', '–ø–æ–ª–µ–π'], ['—Ç–æ–º', '—Ç–æ–º–∞', '–¥–∂–µ—Ä–∏', '–º—ã—à—å', '–º—ã—à–∏', '–∫–æ—Ç', '–∫–æ—Ç–∞', '–∫—Ä–∞—Å–Ω—ã–π', '–∫—Ä–∞—Å–Ω–æ–≥–æ'],
    ['–º—É–∂—á–∏–Ω–∞', '–º—É–∂—á–∏–Ω', '–º—É–∂—á–∏–Ω—ã', '–º—É–∂—á–∏–Ω—É', '—è–±–ª–æ–∫–æ', '—è–±–ª–æ–∫', '–º–æ—Ä–µ', '–º–æ—Ä–µ–π', '–º–æ—Ä—è', '—à–ª—è–ø–∞', '—à–ª—è–ø', '—à–ª—è–ø—ã'],
    ['—Å–∏–Ω–∏–π', '—Å–∏–Ω–µ–≥–æ', '–¥–µ–≤—É—à–∫–∞', '–¥–µ–≤—É—à–µ–∫', '–¥–µ–≤—É—à–∫–∏', '–æ—Å—Ç—Ä–æ–≤', '–æ—Å—Ç—Ä–æ–≤–∞', '—Ñ–∏–ª—å–º', '—Ñ–∏–ª—å–º—ã', '—Ñ–∏–ª—å–º–∞', '–∞–≤–∞—Ç–∞—Ä']]

BASE_DATA_DIR = "user_data"
os.makedirs(BASE_DATA_DIR, exist_ok=True)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
current_vote_number = 1

ADMIN_ID = int(os.getenv('ADMIN_ID'))


def get_pattern(vote_num):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–∫—É —Å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏"""
    current_bans = ARR_BAN_WORD[vote_num - 1]
    pattern = r'(' + '|'.join(current_bans) + ')'
    return pattern


def get_vote_dir(vote_num):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
    return os.path.join(BASE_DATA_DIR, f"vote_{vote_num}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id

    vote_dir = get_vote_dir(current_vote_number)
    os.makedirs(vote_dir, exist_ok=True)

    sub_file = os.path.join(vote_dir, "subscriptions.txt")

    with open(sub_file, "a+") as f:
        f.seek(0)
        subscribers = f.read().splitlines()
        if str(user_id) not in subscribers:
            f.write(f"{user_id}\n")

    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏–µ —Ç–∞–ª–∞–Ω—Ç–æ–≤! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—è–≤–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –∏–ª–∏ –∞—Ñ–∏—à—É, –∏—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç @kandinsky21_bot.\n\nüö´ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ –∏ –∏—Ö –æ–¥–Ω–æ–∫–æ—Ä–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º. –ò—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –∏ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ –≤ –ë–∏—Ç–≤—É –ø—Ä–æ–º—Ç–æ–≤.\n\n–ö–æ–º–∞–Ω–¥—ã:\n- /get_task - –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ\n- /start - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /decrement_vote
async def decrement_count(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id != ADMIN_ID:
        await update.message.reply_text("‚ùå –ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
        return
    global current_vote_number
    if current_vote_number > 1:
        current_vote_number -= 1
        await update.message.reply_text("–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–∞—á–µ–Ω–æ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É!")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /get_id
async def get_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    await update.message.reply_text("–í–∞—à id: " + str(user_id))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /get_task
async def get_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    original_media = [InputMediaPhoto(
        media=open(os.path.join(BASE_DATA_DIR, "original_" + str(current_vote_number) + ".jpg"), "rb"))]
    await context.bot.send_media_group(chat_id=user_id, media=original_media)
    await context.bot.send_message(
        chat_id=user_id,
        text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ @kandinsky21_bot, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞: " + str(
            ', '.join(ARR_BAN_WORD[current_vote_number - 1])))


def calc_votes(vote_dir: str) -> {}:
    vote_file = os.path.join(vote_dir, "votes.txt")
    with open(vote_file, "r") as f:
        votes = f.read().splitlines()
        count_vote_each_id = {}
        for vote in votes:
            member_id, vote_id = vote.split(',')
            if vote_id in count_vote_each_id:
                count_vote_each_id[vote_id] += 1
            else:
                count_vote_each_id[vote_id] = 1
    return count_vote_each_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info
async def about_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info"""
    user_id = update.effective_user.id
    if user_id != ADMIN_ID:
        await update.message.reply_text("‚ùå –ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
        return

    for i in range(1, current_vote_number):
        vote_dir = get_vote_dir(i)
        count_vote_each_id = calc_votes(vote_dir)

        await context.bot.send_message(
            chat_id=user_id,
            text="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ #" + str(i) + ": " + str(count_vote_each_id)
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /set_winner
async def set_winner(update: Update, context: ContextTypes.DEFAULT_TYPE):
    admin_user_id = update.effective_user.id
    if admin_user_id != ADMIN_ID:
        await update.message.reply_text("‚ùå –ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
        return

    vote_dir = get_vote_dir(current_vote_number - 1)
    count_vote_each_id = calc_votes(vote_dir)

    nums_choose = 3
    max_vote_ID = [0] * nums_choose
    max_vote = [0] * nums_choose
    for member_id in count_vote_each_id:
        current_vote = count_vote_each_id[member_id]
        for i in range(nums_choose):
            if max_vote[i] < current_vote:
                for j in range(nums_choose - 1, i, -1):
                    max_vote_ID[j] = max_vote_ID[j - 1]
                    max_vote[j] = max_vote[j - 1]
                max_vote_ID[i] = member_id
                max_vote[i] = count_vote_each_id[member_id]

                break

    choose_text = ""
    for i in range(nums_choose):
        prompt_dir = get_vote_dir(current_vote_number - 1)
        prompt_file = os.path.join(prompt_dir, str(max_vote_ID[i]) + "_text.txt")
        with open(prompt_file, "r") as f:
            prompt = f.read()

        choose_text += "place: " + str(i) + ", id: " + str(max_vote_ID[i]) + ", count: " + str(
            max_vote[i]) + "\n" + prompt + "\n\n"

    buttons = [
        InlineKeyboardButton(f"id_{i}",
                             callback_data=f"winner_{current_vote_number - 1}_{i}")
        for i in max_vote_ID
    ]
    keyboard = InlineKeyboardMarkup([buttons])

    await context.bot.send_message(
        chat_id=admin_user_id,
        text=choose_text,
        reply_markup=keyboard
    )


async def newsletter_winner(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—á–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è"""
    query = update.callback_query
    await query.answer()

    # user_id = query.from_user.id
    _, vote_num, winner_id = query.data.split("_")

    vote_dir = get_vote_dir(int(vote_num))

    # –†–∞—Å—Å—ã–ª–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    with open(os.path.join(vote_dir, "subscriptions.txt"), "r") as f:
        subscribers = f.read().splitlines()
    for user_id in subscribers:
        try:
            media = [InputMediaPhoto(media=open(os.path.join(vote_dir, str(winner_id) + "_photo.jpg"), "rb"))]

            await context.bot.send_media_group(chat_id=user_id, media=media)
            await context.bot.send_message(
                chat_id=user_id,
                text=f"–í {vote_num} —ç—Ç–∞–ø–µ –ø–æ–±–µ–¥–∏–ª–∞ –¥–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞. –ê–≤—Ç–æ—Ä–∞ –ø—Ä–æ—Å–∏–º –ø–æ–¥–æ–π—Ç–∏ –∫ –Ω–∞—à–µ–π –∑–æ–Ω–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞."
            )

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text="–°–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑–æ—Å–ª–∞–Ω—ã. –í –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ #" + vote_num + " –ø–æ–±–µ–¥–∏–ª " + str(winner_id)
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def check_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global current_vote_number
    message = update.message
    user_id = message.from_user.id

    if current_vote_number >= 5:
        await message.reply_text(
            "–ò–≥—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –†–∞–¥—ã –±—ã–ª–∏ –≤–∞—Å –≤–∏–¥–µ—Ç—å –Ω–∞ Itmo Family Day!")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–º –∏ –æ—Ç –Ω—É–∂–Ω–æ–≥–æ –±–æ—Ç–∞
    if 'forward_from' not in message.api_kwargs:
        await message.reply_text("‚ùå –£–ø—Å, —ç—Ç–æ –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return

    if message.api_kwargs.get('forward_from').get('username') != KANDINSKY_BOT_USERNAME:
        await message.reply_text("‚ùå –£–ø—Å, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –Ω–µ –æ—Ç @kandinsky21_bot!")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ï—Å—Ç—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞
    if not (message.photo or (message.document and message.document.mime_type.startswith('image/'))):
        await message.reply_text("‚ùå –£–ø—Å, –≤—ã—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç —Ä–µ–≥—É–ª—è—Ä–∫–µ
    text = update.message.text or update.message.caption or ""

    if re.search(get_pattern(current_vote_number), text) or not ("–ó–∞–ø—Ä–æ—Å:" in text):
        await update.message.reply_text("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ç–µ–∫—Å—Ç –≤–æ–æ–±—â–µ!")
        return

    vote_dir = get_vote_dir(current_vote_number)
    os.makedirs(vote_dir, exist_ok=True)
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for filename in os.listdir(vote_dir):
        if filename.startswith(f"{user_id}_"):
            try:
                os.remove(os.path.join(vote_dir, filename))
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filename}: {e}")

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if message.photo:
            photo_file = await message.photo[-1].get_file()
        else:
            photo_file = await message.document.get_file()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        photo_path = os.path.join(vote_dir, f"{user_id}_photo.jpg")
        await photo_file.download_to_drive(photo_path)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if text:
            text_path = os.path.join(vote_dir, f"{user_id}_text.txt")
            with open(text_path, 'w', encoding='utf-8') as f:
                f.write(text)

        await message.reply_text(
            "üëæ–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –ö–æ–≥–¥–∞ –≤—Å–µ —Ä–∞–±–æ—Ç—ã –±—É–¥—É—Ç —Å–æ–±—Ä–∞–Ω—ã, –≤–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—ã –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ—Ö–æ–∂–∏–µ —à–µ–¥–µ–≤—Ä—ã.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        await message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞")


async def start_voting(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚ùå –ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
        return

    global current_vote_number

    vote_dir = get_vote_dir(current_vote_number)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    all_photos = [f for f in os.listdir(vote_dir) if f.endswith("_photo.jpg")]

    if len(all_photos) < 6:
        await update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–æ—Ç–æ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 5 –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)!")
        return

    # –†–∞—Å—Å—ã–ª–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    with open(os.path.join(vote_dir, "subscriptions.txt"), "r") as f:
        subscribers = f.read().splitlines()

    original_media = [InputMediaPhoto(
        media=open(os.path.join(BASE_DATA_DIR, "original_" + str(current_vote_number) + ".jpg"), "rb"))]
    for user_id in subscribers:
        try:
            available_photos = [p for p in all_photos if p.split("_")[0] != user_id]
            selected_photos = random.sample(available_photos, min(5, len(available_photos)))

            media = [InputMediaPhoto(media=open(os.path.join(vote_dir, photo), "rb"))
                     for photo in selected_photos]

            buttons = [
                InlineKeyboardButton(f"–§–æ—Ç–æ {i + 1}",
                                     callback_data=f"vote_{current_vote_number}_{selected_photos[i].split('_')[0]}")
                for i in range(len(selected_photos))
            ]
            keyboard = InlineKeyboardMarkup([buttons])

            await context.bot.send_media_group(chat_id=user_id, media=original_media)
            await context.bot.send_message(
                chat_id=user_id,
                text=f"–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ"
            )
            await context.bot.send_media_group(chat_id=user_id, media=media)
            await context.bot.send_message(
                chat_id=user_id,
                text=f"üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ #{current_vote_number} ¬´–ë–∏—Ç–≤–∞ –ü—Ä–æ–º—Ç–æ–≤¬ª\n\n–í—Ä–µ–º—è –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ–º—Ç–æ–≤!\n- –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–∞–±–æ—Ç–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n- –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª\n\n–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ 30 –º–∏–Ω—É—Ç\n\n–ö–∞–∂–¥—ã–π –≥–æ–ª–æ—Å –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ\n- –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–æ—Ç–∞\n- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
                reply_markup=keyboard
            )

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    await update.message.reply_text(
        f"‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ #{current_vote_number} –∑–∞–ø—É—â–µ–Ω–æ!\n"
        f"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(subscribers)}\n"
        f"–§–æ—Ç–æ –¥–ª—è –≤—ã–±–æ—Ä–∞: {len(all_photos)}"
    )

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    current_vote_number += 1
    if current_vote_number < 5:
        vote_dir = get_vote_dir(current_vote_number)
        os.makedirs(vote_dir, exist_ok=True)

        # –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        prev_sub_file = os.path.join(get_vote_dir(current_vote_number - 1), "subscriptions.txt")
        if os.path.exists(prev_sub_file):
            with open(prev_sub_file, "r") as f:
                subscribers = f.read().splitlines()
            with open(os.path.join(vote_dir, "subscriptions.txt"), "w") as f:
                f.write("\n".join(subscribers))


async def handle_vote(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    _, vote_num, chosen_user_id = query.data.split("_")
    vote_dir = get_vote_dir(int(vote_num))

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≥–æ–ª–æ—Å
    with open(os.path.join(vote_dir, "votes.txt"), "a") as f:
        f.write(f"{user_id},{chosen_user_id}\n")

    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º
    await query.edit_message_text("‚úÖ –í–∞—à –≥–æ–ª–æ—Å —É—á—Ç–µ–Ω!")


if __name__ == "__main__":
    app = Application.builder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("get_id", get_id))
    app.add_handler(CommandHandler("get_task", get_task))
    app.add_handler(CommandHandler("start_voting", start_voting))
    app.add_handler(CommandHandler("set_winner", set_winner))
    app.add_handler(CommandHandler("info", about_members))
    app.add_handler(CommandHandler("decrement_vote", decrement_count))
    app.add_handler(MessageHandler(filters.TEXT | filters.CAPTION | filters.PHOTO, check_message))
    app.add_handler(CallbackQueryHandler(handle_vote, pattern="^vote_"))
    app.add_handler(CallbackQueryHandler(newsletter_winner, pattern="^winner_"))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
